{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Projects\\\\Real-Time IoT Dashboard with AI Analytics using MQTT\\\\frontend\\\\src\\\\components\\\\ChartSection.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartSection({\n  data\n}) {\n  if (!data.length) return null;\n  const labels = data.map(d => new Date(d.timestamp).toLocaleTimeString());\n  const temp = data.map(d => d.temperature);\n  const humidity = data.map(d => d.humidity);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"600px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sensor Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels,\n        datasets: [{\n          label: \"Temperature (°C)\",\n          data: temp\n        }, {\n          label: \"Humidity (%)\",\n          data: humidity\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = ChartSection;\nvar _c;\n$RefreshReg$(_c, \"ChartSection\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","jsxDEV","_jsxDEV","ChartSection","data","length","labels","map","d","Date","timestamp","toLocaleTimeString","temp","temperature","humidity","style","width","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","label","_c","$RefreshReg$"],"sources":["D:/My Projects/Real-Time IoT Dashboard with AI Analytics using MQTT/frontend/src/components/ChartSection.js"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\n\r\nexport default function ChartSection({ data }) {\r\n  if (!data.length) return null;\r\n  const labels = data.map((d) => new Date(d.timestamp).toLocaleTimeString());\r\n  const temp = data.map((d) => d.temperature);\r\n  const humidity = data.map((d) => d.humidity);\r\n\r\n  return (\r\n    <div style={{ width: \"600px\", margin: \"auto\" }}>\r\n      <h3>Sensor Trends</h3>\r\n      <Line\r\n        data={{\r\n          labels,\r\n          datasets: [\r\n            { label: \"Temperature (°C)\", data: temp },\r\n            { label: \"Humidity (%)\", data: humidity },\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC7C,IAAI,CAACA,IAAI,CAACC,MAAM,EAAE,OAAO,IAAI;EAC7B,MAAMC,MAAM,GAAGF,IAAI,CAACG,GAAG,CAAEC,CAAC,IAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;EAC1E,MAAMC,IAAI,GAAGR,IAAI,CAACG,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACK,WAAW,CAAC;EAC3C,MAAMC,QAAQ,GAAGV,IAAI,CAACG,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACM,QAAQ,CAAC;EAE5C,oBACEZ,OAAA;IAAKa,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7ChB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA,CAACJ,IAAI;MACHM,IAAI,EAAE;QACJE,MAAM;QACNiB,QAAQ,EAAE,CACR;UAAEC,KAAK,EAAE,kBAAkB;UAAEpB,IAAI,EAAEQ;QAAK,CAAC,EACzC;UAAEY,KAAK,EAAE,cAAc;UAAEpB,IAAI,EAAEU;QAAS,CAAC;MAE7C;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACG,EAAA,GApBuBtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}